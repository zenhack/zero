#!/bin/bash -e

errf() {
	fmt="$1"
	shift
	printf "ERROR: $fmt\n" $@ 2>&1
	exit 1
}

guess_tool_prefix() {
	case "$1" in
		yeeloong) echo mips64el-unknown-elf- ;;
		panda|rpi) echo arm-none-eabi- ;;
		x86) echo i686-elf- ;;
	esac
}

while [ -n "$1" ]; do
	case "$1" in
		--help) echo 'For build instructions, read docs/building.txt.'; exit 1 ;;
		--platform=*) platform="${1#*=}" ;;
		--tool-prefix=*) tool_prefix="${1#*=}" ;;
		--tool-suffix=*) tool_suffix="${1#*=}" ;;
		*) errf 'unrecognized argument %s.' "$1" ;;
	esac
	shift
done

srcdir="`dirname $0`"
objdir="$PWD"

[ -z "$platform" ] && errf 'option --platform=... must be supplied.'
[ -d "$srcdir/kernel/$platform" ] || \
	errf '%s is not a valid platform.' "$platform"
[ "$platform" = port ] && errf 'port is not a valid platform.'

(cd "$srcdir"; find * -type d) | \
	xargs -n 1 mkdir -p

tool_prefix=${tool_prefix:-`guess_tool_prefix $platform`}
# tool suffix is the empty string unless otherwise specified.

CPP=${CPP:-${tool_prefix}cpp${tool_suffix}}
CC=${CC:-${tool_prefix}gcc${tool_suffix}}
LD=${LD:-${CC}}
OBJCOPY=${OBJCOPY:-${tool_prefix}objcopy${tool_suffix}}

cat > Makefile << EOF
# Autogenerated by $0.
CC=${CC}
LD=${LD}
OBJCOPY=${OBJCOPY}
srcdir=${srcdir}
objdir=${objdir}
platform=${platform}
include ${srcdir}/main.mk
EOF
